{"version":3,"sources":["webpack:///src/app/feature/modules/worklist/components/tasks-table/tasks-table.component.ts","webpack:///src/app/feature/modules/worklist/components/tasks-table/tasks-table.component.html","webpack:///src/app/feature/modules/worklist/containers/task-modal/task-modal.component.ts","webpack:///src/app/feature/modules/worklist/containers/task-modal/task-modal.component.html","webpack:///src/app/feature/modules/worklist/containers/worklist-container/worklist-container.component.ts","webpack:///src/app/feature/modules/worklist/containers/worklist-container/worklist-container.component.html","webpack:///src/app/feature/modules/worklist/worklist.module.ts","webpack:///src/app/feature/modules/worklist/worklist.routing.ts","webpack:///src/app/feature/modules/worklist/worklist.service.ts"],"names":["TasksTableComponent","_i18n","items","loading","accept","details","refresh","relinquish","cols","field","header","width","align","isSortable","instant","filterCols","task","emit","selector","templateUrl","styleUrls","changeDetection","OnPush","TaskModalComponent","_config","_el","_messageService","_ref","_worklistService","formFields","placeholder","id","data","getTask","subscribe","err","detail","add","severity","summary","console","error","closeModal","nativeElement","parentElement","action","$$$Handler","JSON","stringify","saveTask","setTimeout","close","performAction","WorklistContainerComponent","_dialogService","tasks","loadTasks","getTasks","ref","open","contentStyle","overflow","subject","dismissableMask","transitionOptions","modal","style","styleClass","onClose","acceptTask","relinquishTask","showTaskDetails","providers","WorklistModule","imports","declarations","exports","routes","path","pathMatch","component","WorklistRouting","forChild","WorklistService","_http","get","REST_API_URL","post","providedIn"],"mappings":"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","file":"app-feature-modules-worklist-worklist-module-es5.js","sourcesContent":["import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\nimport {TableColumn} from '../../../../../core/models/table';\nimport {Task} from '../../../../../core/models/taks';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-tasks-table',\n    templateUrl: './tasks-table.component.html',\n    styleUrls: ['./tasks-table.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TasksTableComponent {\n    @Input() items: Task[] = [];\n    @Input() loading: boolean = false;\n\n    @Output() accept: EventEmitter<Task> = new EventEmitter<Task>();\n    @Output() details: EventEmitter<Task> = new EventEmitter<Task>();\n    @Output() refresh: EventEmitter<null> = new EventEmitter<null>();\n    @Output() relinquish: EventEmitter<Task> = new EventEmitter<Task>();\n\n    cols: TableColumn[] = [\n        {field: 'isNew', header: '', width: '60px', align: 'center', isSortable: true},\n        // tslint:disable-next-line:max-line-length\n        {field: 'priority', header: this._i18n.instant('WORKLIST.TABLE_HEADERS.PRIORITY'), width: '130px', align: 'right', isSortable: true},\n        {field: 'subject', header:  this._i18n.instant('WORKLIST.TABLE_HEADERS.SUBJECT'), isSortable: true},\n        {field: 'message', header:  this._i18n.instant('WORKLIST.TABLE_HEADERS.MESSAGE'), isSortable: true},\n        {field: 'role', header:  this._i18n.instant('WORKLIST.TABLE_HEADERS.ROLE'), isSortable: true},\n        // tslint:disable-next-line:max-line-length\n        {field: 'timeCreated', header:  this._i18n.instant('WORKLIST.TABLE_HEADERS.TIME_CREATED'), width: '160px', align: 'center', isSortable: true}\n    ];\n\n    filterCols: string[] = ['priority', 'subject', 'message', 'role', 'timeCreated'];\n\n    /** @ignore */\n    constructor(\n        private _i18n: TranslateService\n    ) {}\n\n    onAccept(task: Task): void {\n        this.accept.emit(task);\n    }\n\n    onRelinquish(task: Task): void {\n        this.relinquish.emit(task);\n    }\n\n    onDetails(task: Task): void {\n        this.details.emit(task);\n    }\n\n    onRefresh(): void {\n        this.refresh.emit();\n    }\n}\n\n","<p-table #table\n         [loading]=\"loading\"\n         [globalFilterFields]=\"filterCols\"\n         [paginator]=\"true\"\n         [rows]=\"25\"\n         [rowsPerPageOptions]=\"[10, 25, 50, 100]\"\n         [value]=\"items\"\n         [scrollable]=\"true\"\n         [tableStyle]=\"{minWidth: '1024px'}\"\n         dataKey=\"id\"\n         sortField=\"timeCreated\"\n         [sortOrder]=\"-1\"\n         styleClass=\"p-datatable-sm p-datatable-gridlines\">\n    <ng-template pTemplate=\"caption\">\n        <div class=\"table-header\">\n            {{'WORKLIST.TABLE_TITLE' | translate}}\n\n            <span class=\"p-input-icon-left\" style=\"margin-left: 16px; width: 40%\">\n                <i class=\"pi pi-search\"></i>\n                <input pInputText\n                       type=\"text\"\n                       style=\"width: 100%\"\n                       [placeholder]=\"'WORKLIST.SEARCH_PLACEHOLDER' | translate\"\n                       (input)=\"table.filterGlobal($event.target.value, 'contains')\"\n                />\n            </span>\n\n            <button pButton\n                    pRipple\n                    icon=\"pi pi-refresh\"\n                    class=\"is-pulled-right no-label-mobile\"\n                    [label]=\"'WORKLIST.REFRESH_BUTTON' | translate\"\n                    (throttleClick)=\"onRefresh()\"\n            >\n            </button>\n        </div>\n    </ng-template>\n\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th style=\"width: 60px\">#</th>\n\n            <th *ngFor=\"let col of cols\"\n                [style.width]=\"col.width\"\n                [pSortableColumn]=\"col.isSortable ? col.field : null\">\n                {{col.header}}\n                <p-sortIcon *ngIf=\"col.isSortable\" [field]=\"col.field\"></p-sortIcon>\n            </th>\n\n            <th style=\"width: 85px\"></th>\n        </tr>\n    </ng-template>\n\n    <ng-template pTemplate=\"body\" let-task let-i=\"rowIndex\">\n        <tr>\n            <td style=\"width: 60px; text-align: right\">{{i + 1}}</td>\n\n            <td [style.width]=\"col.width\"\n                [style.text-align]=\"col.align\"\n                [class.tagged-cell]=\"col.field === 'isNew'\"\n                [ngSwitch]=\"col.field\"\n                *ngFor=\"let col of cols\">\n                <span *ngSwitchCase=\"'isNew'\">\n                    <span *ngIf=\"task[col.field]\" class=\"tag is-info is-light\">New</span>\n                </span>\n\n                <span *ngSwitchCase=\"'timeCreated'\">\n                    {{task[col.field] | date:'dd.MM.yyyy HH:mm:ss'}}\n                </span>\n\n                <span *ngSwitchDefault>\n                    {{task[col.field]}}\n                </span>\n            </td>\n\n            <td class=\"button-cell\" style=\"width: 85px; vertical-align: middle\">\n                <button *ngIf=\"task.isNew\"\n                        type=\"button\"\n                        pButton\n                        pRipple\n                        icon=\"pi pi-check\"\n                        iconPos=\"left\"\n                        class=\"button is-success\"\n                        [title]=\"'WORKLIST.ACCEPT_BUTTON' | translate\"\n                        (click)=\"onAccept(task)\"\n                >\n                </button>\n\n                <button *ngIf=\"!task.isNew\"\n                        type=\"button\"\n                        pButton\n                        pRipple\n                        icon=\"pi pi-search\"\n                        iconPos=\"left\"\n                        style=\"margin-right: 8px\"\n                        [title]=\"'WORKLIST.DETAILS_BUTTON' | translate\"\n                        (click)=\"onDetails(task)\"\n                >\n                </button>\n\n                <button *ngIf=\"!task.isNew\"\n                        type=\"button\"\n                        pButton\n                        pRipple\n                        icon=\"pi pi-minus-circle\"\n                        iconPos=\"left\"\n                        class=\"p-button-danger\"\n                        [title]=\"'WORKLIST.RELINQUISH_BUTTON' | translate\"\n                        (click)=\"onRelinquish(task)\"\n                >\n                    <i class=\"fa fa-copy\"></i>\n                </button>\n            </td>\n        </tr>\n    </ng-template>\n\n    <ng-template pTemplate=\"paginatorleft\">\n        <div class=\"total\">{{'WORKLIST.TOTAL' | translate}}: {{table.totalRecords}}</div>\n    </ng-template>\n</p-table>\n\n\n","import get from 'lodash-es/get';\nimport {BlockableUI, MessageService} from 'primeng/api';\nimport {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {DynamicDialogConfig, DynamicDialogRef} from 'primeng/dynamicdialog';\nimport {ModalBaseComponent} from '@shared/components/modal-base/modal-base.component';\nimport {Task} from '@core/models/taks';\nimport {WorklistService} from '../../worklist.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n\n@Component({\n    selector: 'app-task-modal',\n    templateUrl: './task-modal.component.html',\n    styleUrls: ['./task-modal.component.scss']\n})\nexport class TaskModalComponent extends ModalBaseComponent implements OnInit, BlockableUI {\n    formFields: {[key: string]: string} | null = null;\n    loading: boolean = true;\n    placeholder: string = 'assets/images/placeholder.jpg';\n    task: Task | null = null;\n\n    /** @ignore */\n    constructor(\n        protected _config: DynamicDialogConfig,\n        private _el: ElementRef,\n        private _i18n: TranslateService,\n        private _messageService: MessageService,\n        protected _ref: DynamicDialogRef,\n        private _worklistService: WorklistService\n    ) {\n        super(_config, _ref);\n    }\n\n    ngOnInit(): void {\n        this.loading = true;\n        const id = this._config.data.id;\n\n        this._worklistService.getTask(id)\n            .subscribe(task => {\n                this.task = task;\n                this.formFields = {...task.formFields};\n                this.loading = false;\n            },\n            (err) => {\n                const detail = get(err, 'error.summary', '');\n                this._messageService.add({severity: 'error', summary: this._i18n.instant('TASK_MODAL.LOADING_ERROR'), detail});\n                console.error(err);\n                this.closeModal();\n                this.loading = false;\n            });\n    }\n\n    getBlockableElement(): HTMLElement {\n        return this._el.nativeElement.parentElement.parentElement;\n    }\n\n    performAction(action: string): void {\n        this.loading = true;\n        const task: Task = {...this.task} as Task;\n        task.action = action;\n\n        if (task.formFields && task.formFields.$$$Handler) {\n            task.formFields.$$$Handler = JSON.stringify(task.formFields.$$$Handler);\n        }\n\n        this._worklistService.saveTask(task)\n            .subscribe(() => {\n                setTimeout(() => {\n                    if (action !== '$Save') {\n                        this._messageService.add({\n                            severity: 'success',\n                            summary: this._i18n.instant('TASK_MODAL.SUCCESS_MESSAGE'),\n                            detail: this._i18n.instant('TASK_MODAL.ACTION_COMPLETE', {action})\n                        });\n                    } else {\n                        this._messageService.add({severity: 'success', summary: this._i18n.instant('TASK_MODAL.SAVING_COMPLETE')});\n                    }\n\n                    this.closeModal(action);\n                    this.loading = false;\n                }, 300);\n            },\n            (err) => {\n                const detail = get(err, 'error.summary', '');\n                this._messageService.add({severity: 'error', summary: this._i18n.instant('TASK_MODAL.SAVING_ERROR'), detail});\n                console.error(err);\n                this.loading = false;\n            });\n    }\n\n    closeModal(action = '') {\n        this._ref.close(action);\n    }\n}\n\n","<p-blockUI [target]=\"this\" [blocked]=\"loading\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"></i>\n</p-blockUI>\n\n<div class=\"columns is-multiline p-dialog-content\"\n     style=\"max-height: 60vh; overflow: auto; padding: 0\">\n    <div class=\"column is-full\">\n        <span *ngIf=\"task?.timeCreated\"\n              class=\"details-header\"\n              [title]=\"'TASK_MODAL.TIME_CREATED' | translate\"\n              style=\"display: inline-block; margin-right: 32px\">\n            <i class=\"pi pi-clock\" style=\"font-weight: bold; vertical-align: middle; margin-right: 4px\"></i>\n            <span style=\"font-size: 13px; font-weight: 600\">\n                {{task?.timeCreated | date: 'dd.MM.yyyy HH:mm:ss'}}\n            </span>\n        </span>\n\n        <span *ngIf=\"task?.role\"\n              [title]=\"'TASK_MODAL.ROLE' | translate\"\n              class=\"details-header\"\n              style=\"display: inline-block; margin-right: 32px\">\n            <i class=\"pi pi-user\" style=\"font-weight: bold; vertical-align: middle; margin-right: 4px\"></i>\n            <span style=\"font-size: 13px; font-weight: 600\">\n                {{task?.role}}\n            </span>\n        </span>\n\n        <div *ngIf=\"task?.priority\"\n             [title]=\"'TASK_MODAL.PRIORITY' | translate\"\n             style=\"display: inline-flex;\" class=\"details-header tags has-addons\">\n            <span class=\"tag is-light\" style=\"margin-bottom: 0; font-size: 12px\">\n                {{'TASK_MODAL.PRIORITY' | translate}}\n            </span>\n            <span class=\"tag\" style=\"margin-bottom: 0; font-size: 12px\"\n                  [class.is-danger]=\"task && task.priority === 1\"\n                  [class.is-warning]=\"task && task.priority === 2\"\n                  [class.is-success]=\"task && task.priority === 3\"\n                  [class.is-primary]=\"task && task.priority === 4\"\n                  [class.is-info]=\"task && task.priority < 4\"\n            >\n                <i class=\"pi pi-arrow-up\"\n                   style=\"font-size: 9px; font-weight: bold; vertical-align: middle; margin-right: 4px\"\n                   *ngIf=\"task?.priority <= 3\"></i>\n\n                <i class=\"pi pi-arrow-down\"\n                   style=\"font-size: 9px; font-weight: bold; vertical-align: middle; margin-right: 4px\"\n                   *ngIf=\"task?.priority > 3\"></i>\n                {{task?.priority}}\n            </span>\n        </div>\n    </div>\n\n    <!--Message-->\n    <div *ngIf=\"task?.message\" class=\"column is-full\">\n        {{task?.message}}\n    </div>\n\n    <div *ngFor=\"let field of formFields | keyvalue\"\n         [hidden]=\"field.key === '$$$Handler'\"\n         class=\"column is-full\">\n        <div class=\"field\"\n             *ngIf=\"!['link', 'img'].includes(formFields?.$$$Handler | get:field.key)\">\n            <label class=\"label\" [for]=\"field.key\">{{field.key}}</label>\n            <input type=\"text\"\n                   [id]=\"field.key\"\n                   pInputText\n                   [(ngModel)]=\"task?.formFields[field.key]\"\n                   style=\"width: 100%\">\n        </div>\n\n        <div *ngIf=\"['link'].includes(formFields?.$$$Handler | get:field.key)\">\n            <label class=\"label\"\n                   [for]=\"field.key\"\n                   style=\"display: inline\"\n            >\n                {{field.key}}:\n            </label>\n\n            <a handleLink [href]=\"field.value\">{{field.value}}</a>\n        </div>\n\n        <div *ngIf=\"['img'].includes(formFields?.$$$Handler | get:field.key)\">\n            <label class=\"label\"\n                   [for]=\"field.key\">\n                {{field.key}}\n            </label>\n\n            <a handleLink [href]=\"field.value\">\n                <div class=\"img-placeholder\">\n                    <img [src]=\"field.value\" style=\"height: 100px\">\n                </div>\n            </a>\n        </div>\n    </div>\n</div>\n\n<div class=\"p-dialog-footer\" style=\"padding: 0; text-align: right\">\n    <button *ngFor=\"let action of task?.actions?.split(',')\"\n            pButton\n            pRipple\n            style=\"margin-right: 8px\"\n            class=\"is-fullwidth-mobile\"\n            [disabled]=\"loading\"\n            (throttleClick)=\"performAction(action)\"\n            [label]=\"action\">\n    </button>\n\n    <button pButton\n            pRipple\n            class=\"button is-success is-fullwidth-mobile\"\n            style=\"margin-right: 8px\"\n            icon=\"pi pi-save\"\n            [disabled]=\"loading\"\n            [label]=\"'TASK_MODAL.SAVE_BUTTON' | translate\"\n            (throttleClick)=\"performAction('$Save')\"\n    >\n    </button>\n\n    <button pButton\n            pRipple\n            class=\"p-button-secondary is-fullwidth-mobile\"\n            icon=\"pi pi-times\"\n            [disabled]=\"loading\"\n            [label]=\"'TASK_MODAL.CLOSE_BUTTON' | translate\"\n            (click)=\"closeModal()\"\n    >\n    </button>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {DialogService} from 'primeng/dynamicdialog';\nimport {TaskModalComponent} from '../task-modal/task-modal.component';\nimport {Task} from '../../../../../core/models/taks';\nimport {TranslateService} from '@ngx-translate/core';\nimport {WorklistService} from '../../worklist.service';\n\n@Component({\n    selector: 'app-worklist-container',\n    templateUrl: './worklist-container.component.html',\n    styleUrls: ['./worklist-container.component.scss'],\n    providers: [DialogService]\n})\nexport class WorklistContainerComponent implements OnInit {\n    loading: boolean = true;\n    tasks: Task[] = [];\n\n    constructor(\n        private _dialogService: DialogService,\n        private _i18n: TranslateService,\n        private _worklistService: WorklistService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.loadTasks();\n    }\n\n    loadTasks(): void {\n        this.loading = true;\n        this._worklistService.getTasks()\n            .subscribe((tasks) => {\n                    this.tasks = tasks;\n                    this.loading = false;\n                },\n                () => {\n                    this.tasks = [];\n                    this.loading = false;\n                });\n    }\n\n    acceptTask(task: Task): void {\n        task = {...task, action: '$Accept', formFields: {}};\n        this._worklistService.saveTask(task).subscribe(() => this.loadTasks());\n    }\n\n    relinquishTask(task: Task): void {\n        task = {...task, action: '$Relinquish', formFields: {}};\n        this._worklistService.saveTask(task).subscribe(() => this.loadTasks());\n    }\n\n    showTaskDetails(task: Task): void {\n        const ref = this._dialogService.open(TaskModalComponent, {\n            contentStyle: {overflow: 'hidden'},\n            data: {id: task.id},\n            header: task.subject || this._i18n.instant('TASK_MODAL.TITLE'),\n            dismissableMask: false,\n            transitionOptions: '350ms cubic-bezier(0.25, 0.8, 0.25, 1)',\n            modal: true,\n            style: {'max-width': '1200px'},\n            styleClass: 'details-modal'\n        });\n\n        ref.onClose.subscribe(action => action ? this.loadTasks() : null);\n    }\n}\n","<div class=\"hero fullheight-with-navbar main-bg\">\n    <p-toast position=\"top-right\"></p-toast>\n\n    <div class=\"container is-fluid\" style=\"padding-top: 32px; padding-bottom: 32px\">\n        <div class=\"card border-rounded\" style=\"padding: 16px; overflow: auto\">\n            <app-tasks-table\n                    [loading]=\"loading\"\n                    [items]=\"tasks\"\n                    (refresh)=\"loadTasks()\"\n                    (accept)=\"acceptTask($event)\"\n                    (relinquish)=\"relinquishTask($event)\"\n                    (details)=\"showTaskDetails($event)\"\n            >\n            </app-tasks-table>\n        </div>\n    </div>\n</div>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {SharedModule} from '../../../shared/modules/shared.module';\nimport {TaskModalComponent} from './containers/task-modal/task-modal.component';\nimport {TasksTableComponent} from './components/tasks-table/tasks-table.component';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {VendorModule} from '@shared/modules/vendor.module';\nimport {WorklistContainerComponent} from './containers/worklist-container/worklist-container.component';\nimport {WorklistRouting} from './worklist.routing';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SharedModule,\n        TranslateModule,\n        VendorModule,\n        WorklistRouting\n    ],\n    declarations: [\n        TaskModalComponent,\n        TasksTableComponent,\n        WorklistContainerComponent\n    ],\n    exports: [\n        WorklistContainerComponent\n    ]\n})\nexport class WorklistModule {}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {WorklistContainerComponent} from './containers/worklist-container/worklist-container.component';\n\nconst routes: Routes = [{\n    path: '',\n    pathMatch: 'full',\n    component: WorklistContainerComponent\n}];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class WorklistRouting {}\n","import {AppConfig} from '../../../app.service';\nimport {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Task} from '../../../core/models/taks';\n\n@Injectable({providedIn: 'root'})\nexport class WorklistService {\n    /**\n     * @ignore\n     */\n    constructor(\n        private _http: HttpClient\n    ) {\n    }\n\n    getTasks(): Observable<Task[]> {\n       return this._http.get(`${AppConfig.REST_API_URL}/tasks`) as Observable<Task[]>;\n    }\n\n    getTask(id: string): Observable<Task> {\n        return this._http.get(`${AppConfig.REST_API_URL}/task/${id}`) as Observable<Task>;\n    }\n\n    saveTask(task: Task): Observable<unknown> {\n        return this._http.post(`${AppConfig.REST_API_URL}/task/${task.id}`, task) as Observable<unknown>;\n    }\n}\n"]}